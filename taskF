#include <iostream>
#include <vector>

int main() {
    int N, M;
    std::cin >> N;
    std::vector<int> seq1(N);
    for (size_t i = 0; i < N; ++i) std::cin >> seq1[i];
    std::cin >> M;
    std::vector<int> seq2(M);
    for (size_t i = 0; i < M; ++i) std::cin >> seq2[i];
    
    std::vector<std::vector<int>> dp(N + 1, std::vector<int>(M + 1));
    for (size_t i = 0; i < N; ++i) dp[i][0] = 0;
    for (size_t i = 0; i < M; ++i) dp[0][i] = 0;
    
    for (int sum = 2; sum <= M + N; ++sum)
        for (int i = std::max(1, sum - M); i <= std::min(N, sum - 1); ++i) {
            dp[i][sum - i] = std::max(dp[i - 1][sum - i], dp[i][sum - i - 1]);
            if (seq1[i - 1] == seq2[sum - i - 1]) dp[i][sum - i] = std::max(dp[i - 1][sum - i - 1] + 1, dp[i][sum - i]);
        }
    std::cout << dp[N][M] << "\n";
    return 0;
}
