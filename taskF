#include <iostream>
#include <cstdio>
using std::cout;
using std::cin;

struct comp_int {
    bool operator()(const int& t1, const int& t2) {
    return t1 < t2;
    }
};

template<class T, class Comparator>
int NumberOfInvertions(T* left, T* right) {
    Comparator comp;
    if(left != right) {
        int inversions = 0;
        T* av = left + (right - left) / 2;
        T* i = left;
        T* j = av+1;
        T* newA = new T[right - left + 1];
        inversions += NumberOfInvertions<T, Comparator>( left, av);
        inversions += NumberOfInvertions<T, Comparator>( av+1, right);

        while(i != av + 1 && j != right + 1) {
            if(comp(*j, *i)) {
                newA[i - left + j - av - 1] = *j;
                ++j;
                inversions += av - i + 1;
            }else{
                newA[i - left + j - av - 1] = *i;
                ++i;
            }
        }
        while( j != right + 1) {
            newA[i - left + j - av - 1] = *j;
            ++j;
        }
        while( i != av + 1) {
            newA[i - left + j - av - 1] = *i;
            ++i;
        }
        for(i = left; i != right + 1; ++i)*i = newA[i - left];
        return inversions;
    }else{
        return 0;
    }
}

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n;
    cin >> n;
    int numbers[100000];
    for( int i=0; i < n; ++i){
        cin >> numbers[i];
    }

    cout << NumberOfInvertions<int, comp_int>(numbers, numbers + n - 1);
}
