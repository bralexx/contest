#include <iostream>
#include <vector>

using std::cout;
using std::string;
using std::cin;

struct Stack {
    std::vector<int> N;
    int size = 0;

    int getsize() {
        return N.size();
    }

    push(int x) {
        N.push_back(x);
    }

    int pop() {
        int lastN = *(N.end()-1);
        N.resize(N.size()-1);
        return lastN;
    }

    int back() {
        return *(N.end()-1);
    }

    clearall() {
        while (0 < N.size()) this -> pop();
    }

    bool empty(){
        return (this -> N.size() == 0 ? true : false);
    }
};


int main() {
    Stack st;
    string in;
    do {
        cin >> in;

        if(in == "push") {
            int x;
            cin >> x;
            st.push(x);
            cout << "ok\n";
        }

        if( in == "pop" ) {
            if(!st.empty()) {
                cout << st.pop() << "\n";
            }else{
                cout << "error\n";
            }
        }

        if( in == "back" ){
            if(!st.empty()) {
                cout << st.back() << "\n";
            }else{
                cout << "error\n";
            }
        }

        if( in == "size" ) {
                cout << st.getsize() << "\n";
        }

        if(in == "clear") {
                st.clearall();
                cout << "ok\n";
            }
    }while(in != "exit");
    cout << "bye";
}
